- name: "{{ package.key }}: Create virtualenv"
  command:
    cmd: python3.9 -m venv {{ target_directory }}/.opt/{{ package.key }}
    creates: "{{ target_directory }}/.opt/{{ package.key }}"
  environment:
    PATH: |
      {%- if "VIRTUAL_ENV" in ansible_env -%}
        {{ ansible_env.PATH | replace(ansible_env.VIRTUAL_ENV + "/bin:", "") }}
      {%- else -%}
        {{ ansible_env.PATH }}
      {%- endif -%}

- name: "{{ package.key }}: Check essential requirements"
  command: |
    {{ target_directory }}/.opt/{{ package.key }}/bin/python -c "import pkg_resources; pkg_resources.require(open('{{ playbook_dir }}/../requirements-essential.txt'))"
  changed_when: false
  ignore_errors: true
  register: essential_requirements_check

- name: "{{ package.key }}: Install essential requirements"
  command: |
    {{ target_directory }}/.opt/{{ package.key }}/bin/pip install --requirement {{ playbook_dir }}/../requirements-essential.txt
  when: essential_requirements_check.rc != 0

- name: "{{ package.key }}: Check requirements"
  command: |
    {{ target_directory }}/.opt/{{ package.key }}/bin/python -c "import pkg_resources; pkg_resources.require(open('{{ playbook_dir }}/includes/requirements-{{ package.key }}.txt'))"
  changed_when: false
  ignore_errors: true
  register: requirements_check

- name: "{{ package.key }}: Install requirements"
  command: |
    {{ target_directory }}/.opt/{{ package.key }}/bin/pip install --requirement {{ playbook_dir }}/includes/requirements-{{ package.key }}.txt
  when: requirements_check.rc != 0

- name: "{{ package.key }}: Add link in .bin"
  file:
    dest: "{{ target_directory }}/.bin/{{ item.key }}"
    src: "{{ target_directory }}/.opt/{{ package.key }}/bin/{{ item.value }}"
    state: link
    mode: 0755
  loop: "{{ package.value.links | default({ package.key: package.key }) | dict2items }}"


# vim: ft=ansible.yaml
