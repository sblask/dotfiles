- hosts: all

  vars:

    consul_template_version: 0.26.0
    fzf_version: 0.17.5
    grex_version: v1.2.0
    packer_version: 1.7.3
    pup_version: 0.4.0
    terraform_version: 1.0.2
    tflint_version: 0.31.0
    vault_version: 1.5.0

  tasks:

    - include: includes/zipped_executable.yml
      vars:
        product: consul-template
        url: https://releases.hashicorp.com/consul-template/{{ consul_template_version }}/consul-template_{{ consul_template_version }}_{{ os }}_amd64.zip
        version: "{{ consul_template_version }}"


    - name: Check for hub
      stat:
        path: "{{ target_directory }}/.bin/hub"
      register: hub_stat_result
    - name: Get hub
      get_url:
        url: https://github.com/github/hub/releases/download/v{{ version }}/hub-{{ os }}-amd64-{{ version }}.tgz
        dest: "/tmp/hub.tgz"
      vars:
        version: 2.10.0
      when: not hub_stat_result.stat.exists
      register: hub_download
    - name: Unpack hub
      shell: |
        {{ tar | default('tar') }} \
        --extract \
        --verbose \
        --file hub.tgz \
        --wildcards \
        --strip-component 2 \
        --directory {{ target_directory }}/.bin/ \
        "*/hub"
      args:
        chdir: /tmp/
        creates: "{{ target_directory }}/.bin/hub"
        warn: false
      when: hub_download is not skipped and hub_download is success


    - include: includes/zipped_executable.yml
      vars:
        product: fzf
        url: https://github.com/junegunn/fzf-bin/releases/download/{{ fzf_version }}/fzf-{{ fzf_version }}-{{ os }}_amd64.tgz
        version: "{{ fzf_version }}"

    - include: includes/zipped_executable.yml
      vars:
        product: grex
        url: https://github.com/pemistahl/grex/releases/download/{{ grex_version }}/grex-{{ grex_version }}-{{ "x86_64-apple-darwin" if os == "darwin" else "unknown-linux-musl" }}.tar.gz
        version: "{{ grex_version }}"


    - include: includes/zipped_executable.yml
      vars:
        product: packer
        url: https://releases.hashicorp.com/packer/{{ packer_version }}/packer_{{ packer_version }}_{{ os }}_amd64.zip
        version: "{{ packer_version }}"


    - include: includes/zipped_executable.yml
      vars:
        product: pup
        url: https://github.com/ericchiang/pup/releases/download/v{{ pup_version }}/pup_v{{ pup_version }}_{{ os }}_amd64.zip
        version: "{{ pup_version }}"


    - name: Check for RVM installation
      stat:
        path: "{{ target_directory }}/.rvm"
      register: rvm_directory
    - name: Get RVM GPG key
      command: gpg2 --recv-keys 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      when: not rvm_directory.stat.exists
    - name: Download RVM installer
      get_url:
        url: https://get.rvm.io
        dest: /tmp/rvm-installer
        mode: 0700
      when: not rvm_directory.stat.exists
    - name: Install RVM
      command: /tmp/rvm-installer --path {{ target_directory }}/.rvm --ruby --ignore-dotfiles
      args:
        creates: "{{ target_directory }}/.rvm"
      when: not rvm_directory.stat.exists


    - include: includes/zipped_executable.yml
      vars:
        product: terraform
        url: https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_{{ os }}_amd64.zip
        version: "{{ terraform_version }}"


    - include: includes/zipped_executable.yml
      vars:
        product: tflint
        url: https://github.com/terraform-linters/tflint/releases/download/v{{ tflint_version }}/tflint_{{ os }}_amd64.zip
        version: "{{ tflint_version }}"


    - include: includes/zipped_executable.yml
      vars:
        product: vault
        url: https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_{{ os }}_amd64.zip
        version: "{{ vault_version }}"

# vim: syntax=ansible
