- name: Play to install ASDF
  hosts: all

  environment:
    PATH: "{{ target_directory }}/.bin:{{ target_directory }}/.asdf/shims:{{ ansible_env.PATH }}"

  vars:

    packages:
      - {plugin: nodejs, version: 20}
      - {plugin: python, version: 3.11}
      - {plugin: rust, version: 1.81, additional_option: https://github.com/asdf-community/asdf-rust.git}

      - {plugin: direnv, version: 2.35.0}  # renovate: direnv/direnv
      - {plugin: github-cli, version: 2.72.0}  # renovate: cli/cli
      - {plugin: iamlive, version: 1.1.24}  # renovate: iann0036/iamlive
      - {plugin: pre-commit, version: 4.2.0}  # renovate: pre-commit/pre-commit
      - {plugin: terraform, version: 1.11.4}  # renovate: hashicorp/terraform
      - {plugin: terraform-docs, version: 0.18.0}  # renovate: terraform-docs/terraform-docs
      - {plugin: tflint, version: 0.51.1}  # renovate: terraform-linters/tflint
      - {plugin: tfsec, version: 1.28.4}  # renovate: aquasecurity/tfsec
      - {plugin: trivy, version: 0.59.1}  # renovate: aquasecurity/trivy


    zsh_completion_directory: "{{ target_directory }}/.config/zsh/completions.d"

  tasks:

    - name: Install ASDF plugins
      shell: |
        asdf plugin add {{ item.plugin }} {{ item.additional_option | default('') }}
      args:
        creates: "{{ target_directory }}/.asdf/plugins/{{ item.plugin }}"
        executable: /bin/bash
      loop: "{{ packages }}"

    - name: Get latest package versions with ASDF
      shell: |
        set -o pipefail
        asdf latest {{ item.plugin }} {{ item.version }}
      args:
        executable: /bin/bash
      loop: "{{ packages }}"
      register: package_versions
      changed_when: false

    - name: Print latest package versions from ASDF
      debug:
        msg: Latest package version of {{ item.plugin }} is {{ package_versions.results[index].stdout }}
      loop: "{{ packages }}"
      loop_control:
        index_var: index

    - name: Install packages with ASDF
      shell: |
        asdf install {{ item.plugin }} {{ package_versions.results[index].stdout }}
        asdf set --home {{ item.plugin }} {{ package_versions.results[index].stdout }}
      args:
        creates: "{{ target_directory }}/.asdf/installs/{{ item.plugin }}/{{ package_versions.results[index].stdout }}"
        executable: /bin/bash
      loop: "{{ packages }}"
      loop_control:
        index_var: index

    # this is created when installing packages, but the nodejs install is brand new
    - name: Create node_modules directory
      file:
        path: "{{ target_directory }}/.asdf/installs/nodejs/{{ package_versions.results[0].stdout }}/.npm/lib/node_modules"
        state: directory
        mode: 0755

    # see https://nodejs.org/api/modules.html#modules_loading_from_the_global_folders
    - name: Create ~/.node_modules link
      file:
        src: "{{ target_directory }}/.asdf/installs/nodejs/{{ package_versions.results[0].stdout }}/.npm/lib/node_modules"
        dest: "{{ target_directory }}/.node_modules"
        state: link

    - name: Ensure directory for ZSH completions
      file:
        path: "{{ zsh_completion_directory }}"
        state: directory
        mode: 0755

    - name: Generate gh zsh completions
      command: gh completion -s zsh
      args:
        creates: "{{ zsh_completion_directory }}/_gh"
      register: generate_gh_completions

    - name: Save gh zsh completions
      copy:
        content: "{{ generate_gh_completions.stdout }}"
        dest: "{{ zsh_completion_directory }}/_gh"
        mode: 0644
        force: false
